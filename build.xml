<?xml version="1.0" encoding="UTF-8"?>
<project name="dynamic-umesh" default="ci" basedir=".">

    <!-- Properties -->
    <property environment="env"/>
    <property name="API_NAME" value="${API_NAME}"/>
    <property name="API_VERSION" value="${API_VERSION}"/>
    <property name="API_FILE" value="${API_FILE}"/>
    <property name="PRODUCT_NAME" value="${PRODUCT_NAME}"/>
    <property name="PRODUCT_FILE" value="${PRODUCT_FILE}"/>
    <property name="CATALOG_NAME" value="${CATALOG_NAME}"/>
    <property name="env" value="${env}"/>

    <!-- ============================= -->
    <!-- Login to API Connect          -->
    <!-- ============================= -->
    <target name="login">
        <echo>:closed_lock_with_key: Logging in to API Connect...</echo>
        <exec executable="apic">
            <arg line="login --server small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com --username admin --password admin --realm provider/default-idp-1"/>
        </exec>
    </target>

    <!-- ============================= -->
    <!-- Validate API                  -->
    <!-- ============================= -->
    <target name="validate">
        <echo>:white_check_mark: Validating API YAML for ${API_FILE}</echo>
        <exec executable="apic">
            <arg line="validate apis/${API_NAME}/${API_FILE}"/>
        </exec>
    </target>

    <!-- ============================= -->
    <!-- API Exists Check              -->
    <!-- ============================= -->
    <target name="api-check">
        <echo>:mag_right: Checking if API exists...</echo>
        <exec executable="ls">
            <arg line="apis/${API_NAME}"/>
        </exec>
    </target>

    <!-- ============================= -->
    <!-- Update API                    -->
    <!-- ============================= -->
    <target name="api-update">
        <echo>:recycle: Updating existing draft API ${API_NAME}:${API_VERSION}</echo>
        <exec executable="apic">
            <arg line="drafts:update apis/${API_NAME}/${API_FILE} --server small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com --org um-org"/>
        </exec>
    </target>

    <!-- ============================= -->
    <!-- Fix references in product     -->
    <!-- ============================= -->
    <target name="fix-refs">
        <echo>:wrench: Fixing API references in product YAML...</echo>
        <exec executable="apic">
            <arg line="products:replace-refs products/${PRODUCT_NAME}/${PRODUCT_FILE} apis"/>
        </exec>
    </target>

    <!-- ============================= -->
    <!-- Update Product                -->
    <!-- ============================= -->
    <target name="product-update">
        <echo>:recycle: Updating existing draft Product ${PRODUCT_NAME}:${API_VERSION}</echo>
        <exec executable="apic">
            <arg line="drafts:update products/${PRODUCT_NAME}/${PRODUCT_FILE} --server small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com --org um-org"/>
        </exec>
    </target>

    <!-- ============================= -->
    <!-- Publish Product               -->
    <!-- ============================= -->
    <target name="publish">
        <echo>:rocket: Publishing Product ${PRODUCT_FILE} to catalog ${CATALOG_NAME}</echo>
        <exec executable="apic">
            <arg line="publish products/${PRODUCT_NAME}/${PRODUCT_FILE} --server small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com --org um-org --catalog ${CATALOG_NAME}"/>
        </exec>
    </target>

    <!-- ============================= -->
    <!-- Backup API & Product          -->
    <!-- ============================= -->
    <target name="backup">
        <echo>:floppy_disk: Backing up API and Product definitions...</echo>

        <!-- Copy files with timestamp -->
        <tstamp>
            <format property="NOW" pattern="yyyyMMddHHmmss"/>
        </tstamp>
        <copy file="apis/${API_NAME}/${API_FILE}" todir="apis/${API_NAME}"/>
        <move file="apis/${API_NAME}/${API_FILE}" tofile="apis/${API_NAME}/${API_NAME}_${API_VERSION}_${NOW}.yaml"/>

        <copy file="products/${PRODUCT_NAME}/${PRODUCT_FILE}" todir="products/${PRODUCT_NAME}"/>
        <move file="products/${PRODUCT_NAME}/${PRODUCT_FILE}" tofile="products/${PRODUCT_NAME}/${PRODUCT_NAME}_${API_VERSION}_${NOW}.yaml"/>

        <!-- Git commit -->
        <exec executable="git">
            <arg line="add apis/${API_NAME}/*.yaml products/${PRODUCT_NAME}/*.yaml"/>
        </exec>
        <exec executable="git">
            <arg line="commit -m 'Backup API ${API_NAME}:${API_VERSION} and Product ${PRODUCT_NAME}:${API_VERSION} at ${NOW}' --author='Jenkins CI &lt;jenkins@yourcompany.com&gt;'"/>
        </exec>

        <!-- Push using origin (Jenkins creds will apply) -->
        <echo>:arrow_up: Pushing backup to branch HEAD</echo>
        <exec executable="sh">
            <arg line="-c 'git push origin HEAD:main'"/>
        </exec>
    </target>

    <!-- ============================= -->
    <!-- CI Pipeline                   -->
    <!-- ============================= -->
    <target name="ci" depends="login,validate,api-check,api-update,fix-refs,product-update,publish,backup"/>
</project>
